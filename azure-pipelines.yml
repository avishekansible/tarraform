trigger:
 - master

pool:
  vmImage: 'ubuntu-latest'
  
steps:
- task: TerraformInstaller@0
  displayName: Install
  inputs:
    terraformVersion: $(terraformversion)
- task: TerraformTaskV2@2
  displayName: Init
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/$(component)'
    backendServiceArm: $(subscription)
    backendAzureRmResourceGroupName: $(ResourceGroupName)
    backendAzureRmStorageAccountName: $(storageaccount)
    backendAzureRmContainerName: $(ContainerName)
    backendAzureRmKey: $(tfstateFileName)

- task: TerraformTaskV2@2
  displayName: Validate
  inputs:
    provider: 'azurerm'
    command: 'validate'

- task: TerraformTaskV2@2
  displayName: Plan
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/$(component)'
    environmentServiceNameAzureRM: $(subscription)

- task: TerraformTaskV2@2
  displayName: Apply and Deploy
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/$(component)'
    environmentServiceNameAzureRM: $(subscription)

