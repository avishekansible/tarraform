trigger:
 - master

pool:
  vmImage: 'ubuntu-latest'

parameters:
  - name: components
    type: object
    default:
     - resourcegroup
     - storageaccount
     
steps:
 - task: TerraformInstaller@0
   displayName: Install
   inputs:
     terraformVersion: $(TerraformVersion)

 - ${{ each filename in parameters.components }}:
   - task: TerraformTaskV2@2
     displayName: Init on ${{ filename }}
     inputs:
       provider: 'azurerm'
       command: 'init'
       workingDirectory: '$(System.DefaultWorkingDirectory)/${{ filename }}'
       backendServiceArm: $(ServicePrincipleName)
       backendAzureRmResourceGroupName: $(ResourceGroupName)
       backendAzureRmStorageAccountName: $(StorageAccountName)
       backendAzureRmContainerName: $(ContainerName)
       backendAzureRmKey: $(tfstateFileName)

   - task: TerraformTaskV2@2
     displayName: Validate on ${{ filename }}
     inputs:
      provider: 'azurerm'
      command: 'validate'

   - task: TerraformTaskV2@2
     displayName: Plan on ${{ filename }}
     inputs:
       provider: 'azurerm'
       command: 'plan'
       workingDirectory: '$(System.DefaultWorkingDirectory)/$(filename)'
       environmentServiceNameAzureRM: $(ServicePrincipleName)
